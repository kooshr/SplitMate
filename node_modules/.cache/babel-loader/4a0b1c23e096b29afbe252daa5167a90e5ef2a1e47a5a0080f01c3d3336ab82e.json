{"ast":null,"code":"import React,{useRef,useState}from'react';import Tesseract from'tesseract.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ReceiptUploader=_ref=>{let{onDataExtracted}=_ref;const[loading,setLoading]=useState(false);const[fileError,setFileError]=useState('');const fileInputRef=useRef(null);const handleFileChange=async event=>{const file=event.target.files[0];if(!file)return;setLoading(true);setFileError('');try{const{data:{text}}=await Tesseract.recognize(file,'eng');// Basic parsing logic\nconst lines=text.split('\\n').map(line=>line.trim()).filter(Boolean);const itemRegex=/^(.+?)\\s+(\\d+\\.\\d{2})$/;const parsedItems=[];for(const line of lines){const match=line.match(itemRegex);if(match){const itemName=match[1].trim();const price=parseFloat(match[2]);if(!isNaN(price)){parsedItems.push({name:itemName,price});}}}if(parsedItems.length===0){console.warn(\"No items found with given OCR logic.\");}// Call onDataExtracted with the parsed items\nonDataExtracted(parsedItems);}catch(err){console.error(err);setFileError('Error reading the receipt. Please try another image.');}setLoading(false);};const handleUploadClick=()=>{fileInputRef.current.click();};return/*#__PURE__*/_jsxs(\"div\",{className:\"upload-area\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Upload Your Receipt\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click the button below to choose an image of your receipt.\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",ref:fileInputRef,onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{className:\"upload-btn\",onClick:handleUploadClick,children:\"Choose File\"}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Processing OCR... Please wait.\"}),fileError&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:fileError})]});};export default ReceiptUploader;","map":{"version":3,"names":["React","useRef","useState","Tesseract","jsx","_jsx","jsxs","_jsxs","ReceiptUploader","_ref","onDataExtracted","loading","setLoading","fileError","setFileError","fileInputRef","handleFileChange","event","file","target","files","data","text","recognize","lines","split","map","line","trim","filter","Boolean","itemRegex","parsedItems","match","itemName","price","parseFloat","isNaN","push","name","length","console","warn","err","error","handleUploadClick","current","click","className","children","type","accept","ref","onChange","onClick","style","color"],"sources":["/Users/kaush/Desktop/SplitMate/src/components/ReceiptUploader.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport Tesseract from 'tesseract.js';\n\nconst ReceiptUploader = ({ onDataExtracted }) => {\n  const [loading, setLoading] = useState(false);\n  const [fileError, setFileError] = useState('');\n  const fileInputRef = useRef(null);\n\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setLoading(true);\n    setFileError('');\n\n    try {\n      const { data: { text } } = await Tesseract.recognize(file, 'eng');\n      \n      // Basic parsing logic\n      const lines = text.split('\\n').map(line => line.trim()).filter(Boolean);\n      const itemRegex = /^(.+?)\\s+(\\d+\\.\\d{2})$/;\n      const parsedItems = [];\n\n      for (const line of lines) {\n        const match = line.match(itemRegex);\n        if (match) {\n          const itemName = match[1].trim();\n          const price = parseFloat(match[2]);\n          if (!isNaN(price)) {\n            parsedItems.push({ name: itemName, price });\n          }\n        }\n      }\n\n      if (parsedItems.length === 0) {\n        console.warn(\"No items found with given OCR logic.\");\n      }\n\n      // Call onDataExtracted with the parsed items\n      onDataExtracted(parsedItems);\n\n    } catch (err) {\n      console.error(err);\n      setFileError('Error reading the receipt. Please try another image.');\n    }\n\n    setLoading(false);\n  };\n\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div className=\"upload-area\">\n      <h3>Upload Your Receipt</h3>\n      <p>Click the button below to choose an image of your receipt.</p>\n      <input \n        type=\"file\" \n        accept=\"image/*\" \n        ref={fileInputRef} \n        onChange={handleFileChange} \n      />\n      <button className=\"upload-btn\" onClick={handleUploadClick}>Choose File</button>\n      {loading && <p>Processing OCR... Please wait.</p>}\n      {fileError && <p style={{color:'red'}}>{fileError}</p>}\n    </div>\n  );\n};\n\nexport default ReceiptUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}